



benchmarks/3-last_invariant_per_loop/14-1.txt
Compilation successful: True

Mediums: 
[['search_lower_bound_p.ads:16:21: ', ": contract case might fail (e.g. when A = (2 => 0, others => -1) and A'First = 1 and A'Last = 2 and Search_Lower_Bound'Result = (Exists => True, Value => 1) and V = 0)"]]

Output:
Phase 1 of 2: generation of Global contracts ...
Phase 2 of 2: flow analysis and proof ...
search_lower_bound_p.adb:13:07: warning: initialization of "Middle" has no effect
search_lower_bound_p.ads:16:21: medium: contract case might fail (e.g. when A = (2 => 0, others => -1) and A'First = 1 and A'Last = 2 and Search_Lower_Bound'Result = (Exists => True, Value => 1) and V = 0)
Summary logged in /Users/lucian/Documents/Uni/Projects/Diplomarbeit/Marmaragan.nosync/tmp_3-last_invariant_per_loop/search_lower_bound_p/gnatprove/gnatprove.out
--------------------------------------------------




benchmarks/3-last_invariant_per_loop/8-1.txt
Compilation successful: True

Mediums: 
[]

Output:
Phase 1 of 2: generation of Global contracts ...
Phase 2 of 2: flow analysis and proof ...
Summary logged in /Users/lucian/Documents/Uni/Projects/Diplomarbeit/Marmaragan.nosync/tmp_3-last_invariant_per_loop/find_p/gnatprove/gnatprove.out
--------------------------------------------------




benchmarks/3-last_invariant_per_loop/16-1.txt
Compilation successful: False

Mediums: 
[]

Output:
Phase 1 of 2: generation of Global contracts ...
swap_ranges_p.adb:23:03: missing "end loop;" for "loop" at line 10
--------------------------------------------------




benchmarks/3-last_invariant_per_loop/12-1.txt
Compilation successful: True

Mediums: 
[]

Output:
Phase 1 of 2: generation of Global contracts ...
Phase 2 of 2: flow analysis and proof ...
Summary logged in /Users/lucian/Documents/Uni/Projects/Diplomarbeit/Marmaragan.nosync/tmp_3-last_invariant_per_loop/mismatch_p/gnatprove/gnatprove.out
--------------------------------------------------




benchmarks/3-last_invariant_per_loop/10-1.txt
Compilation successful: True

Mediums: 
[]

Output:
Phase 1 of 2: generation of Global contracts ...
Phase 2 of 2: flow analysis and proof ...
Summary logged in /Users/lucian/Documents/Uni/Projects/Diplomarbeit/Marmaragan.nosync/tmp_3-last_invariant_per_loop/linear_search/gnatprove/gnatprove.out
--------------------------------------------------




benchmarks/3-last_invariant_per_loop/9-1.txt
Compilation successful: True

Mediums: 
[['is_sorted_p.adb:28:07: ', ": precondition might fail, cannot prove Weakly_Sorted (A) (e.g. when A = (2 => 0, 3 => -1, 4 => 0, 5 => 0, others => 1) and A'First = 1 and A'Last = 5) [possible explanation: subprogram at is_sorted_p.ads:13 should mention A in a precondition]"], ['is_sorted_p.ads:11:15: ', ": postcondition might fail, cannot prove Sorted (A) (e.g. when A = (others => 0) and A'First = 1 and A'Last = 0)"]]

Output:
Phase 1 of 2: generation of Global contracts ...
Phase 2 of 2: flow analysis and proof ...
is_sorted_p.adb:28:07: medium: precondition might fail, cannot prove Weakly_Sorted (A) (e.g. when A = (2 => 0, 3 => -1, 4 => 0, 5 => 0, others => 1) and A'First = 1 and A'Last = 5) [possible explanation: subprogram at is_sorted_p.ads:13 should mention A in a precondition]
is_sorted_p.ads:11:15: medium: postcondition might fail, cannot prove Sorted (A) (e.g. when A = (others => 0) and A'First = 1 and A'Last = 0)
Summary logged in /Users/lucian/Documents/Uni/Projects/Diplomarbeit/Marmaragan.nosync/tmp_3-last_invariant_per_loop/is_sorted_p/gnatprove/gnatprove.out
--------------------------------------------------




benchmarks/3-last_invariant_per_loop/15-1.txt
Compilation successful: True

Mediums: 
[['show_map.adb:14:39: ', ": loop invariant might not be preserved by an arbitrary iteration, cannot prove A (J - 1) = F (A'Loop_Entry (J)) (e.g. when A = (1 => 2, 2 => 1, others => 0) and A'Loop_Entry = (2 => 0, others => 1) and J = 2)"]]

Output:
Phase 1 of 2: generation of Global contracts ...
Phase 2 of 2: flow analysis and proof ...
show_map.adb:14:39: medium: loop invariant might not be preserved by an arbitrary iteration, cannot prove A (J - 1) = F (A'Loop_Entry (J)) (e.g. when A = (1 => 2, 2 => 1, others => 0) and A'Loop_Entry = (2 => 0, others => 1) and J = 2)
Summary logged in /Users/lucian/Documents/Uni/Projects/Diplomarbeit/Marmaragan.nosync/tmp_3-last_invariant_per_loop/show_map/gnatprove/gnatprove.out
--------------------------------------------------




benchmarks/3-last_invariant_per_loop/11-1.txt
Compilation successful: True

Mediums: 
[['max_element_p.ads:12:21: ', ": contract case might fail (e.g. when A = (others => 0) and A'First = 1 and A'Last = 1 and Max_Element'Result = (Exists => True, Value => 1))"]]

Output:
Phase 1 of 2: generation of Global contracts ...
Phase 2 of 2: flow analysis and proof ...
max_element_p.ads:12:21: medium: contract case might fail (e.g. when A = (others => 0) and A'First = 1 and A'Last = 1 and Max_Element'Result = (Exists => True, Value => 1))
Summary logged in /Users/lucian/Documents/Uni/Projects/Diplomarbeit/Marmaragan.nosync/tmp_3-last_invariant_per_loop/max_element_p/gnatprove/gnatprove.out
--------------------------------------------------




benchmarks/3-last_invariant_per_loop/13-1.txt
Compilation successful: True

Mediums: 
[['reverse_in_place_p.ads:9:15: ', ": postcondition might fail, cannot prove Is_Reversed (A, A'old) (e.g. when A = (Positive'Last-1 => 0, Positive'Last => 0, others => 1) and A'First = 2147483646 and A'Last = 2147483647 and A'Old = (Positive'Last-1 => 1, others => 0))"]]

Output:
Phase 1 of 2: generation of Global contracts ...
Phase 2 of 2: flow analysis and proof ...
reverse_in_place_p.ads:9:15: medium: postcondition might fail, cannot prove Is_Reversed (A, A'old) (e.g. when A = (Positive'Last-1 => 0, Positive'Last => 0, others => 1) and A'First = 2147483646 and A'Last = 2147483647 and A'Old = (Positive'Last-1 => 1, others => 0))
Summary logged in /Users/lucian/Documents/Uni/Projects/Diplomarbeit/Marmaragan.nosync/tmp_3-last_invariant_per_loop/reverse_in_place_p/gnatprove/gnatprove.out
--------------------------------------------------




benchmarks/3-last_invariant_per_loop/1-1.txt
Compilation successful: True

Mediums: 
[['aux.ads:19:14: ', ": postcondition might fail, cannot prove Is_ArgSet(ArgSet_From_ArgList'Result,N) (e.g. when ArgSet_From_ArgList'Result = (1 => True, 2 => True, others => False) and N = 1)"]]

Output:
Phase 1 of 2: generation of Global contracts ...
Phase 2 of 2: flow analysis and proof ...
aux.ads:19:14: medium: postcondition might fail, cannot prove Is_ArgSet(ArgSet_From_ArgList'Result,N) (e.g. when ArgSet_From_ArgList'Result = (1 => True, 2 => True, others => False) and N = 1)
Summary logged in /Users/lucian/Documents/Uni/Projects/Diplomarbeit/Marmaragan.nosync/tmp_3-last_invariant_per_loop/aux/gnatprove/gnatprove.out
--------------------------------------------------




benchmarks/3-last_invariant_per_loop/3-1.txt
Compilation successful: True

Mediums: 
[['counting.adb:26:10: ', ': precondition might fail (e.g. when A = (1 => 3, others => 4) and I = 3 and L = (Size => 3, List => (3 => 2, others => 3)) and N = 3)'], ['counting.adb:80:103: ', ': array index check might fail (e.g. when N = 2)'], ['counting.adb:80:115: ', ': assertion might fail, cannot prove A(I) = J (e.g. when A = (others => 0))'], ['counting.adb:80:188: ', ': array index check might fail (e.g. when N = 1000)'], ['counting.adb:86:31: ', ': assertion might fail, cannot prove I /= Position (e.g. when I = 1000 and Position = 1000)'], ['counting.adb:90:34: ', ': assertion might fail, cannot prove A(I-1) = J (e.g. when A = (2 => 3, 999 => 1, 1000 => 3, others => 2) and I = 1 and J = 2)'], ['counting.adb:90:37: ', ': array index check might fail (e.g. when I = 1)'], ['counting.adb:92:31: ', ': assertion might fail (e.g. when A = (others => 0) and K = 0)']]

Output:
Phase 1 of 2: generation of Global contracts ...
Phase 2 of 2: flow analysis and proof ...
counting.adb:26:10: medium: precondition might fail (e.g. when A = (1 => 3, others => 4) and I = 3 and L = (Size => 3, List => (3 => 2, others => 3)) and N = 3)
counting.adb:80:103: medium: array index check might fail (e.g. when N = 2)
counting.adb:80:115: medium: assertion might fail, cannot prove A(I) = J (e.g. when A = (others => 0))
counting.adb:80:188: medium: array index check might fail (e.g. when N = 1000)
counting.adb:86:31: medium: assertion might fail, cannot prove I /= Position (e.g. when I = 1000 and Position = 1000)
counting.adb:90:34: medium: assertion might fail, cannot prove A(I-1) = J (e.g. when A = (2 => 3, 999 => 1, 1000 => 3, others => 2) and I = 1 and J = 2)
counting.adb:90:37: medium: array index check might fail (e.g. when I = 1)
counting.adb:92:31: medium: assertion might fail (e.g. when A = (others => 0) and K = 0)
Summary logged in /Users/lucian/Documents/Uni/Projects/Diplomarbeit/Marmaragan.nosync/tmp_3-last_invariant_per_loop/counting/gnatprove/gnatprove.out
--------------------------------------------------




benchmarks/3-last_invariant_per_loop/7-1.txt
Compilation successful: True

Mediums: 
[['copy_p.ads:11:15: ', ": postcondition might fail, cannot prove B = A (e.g. when A = (1 => 0, 2 => 0, others => -1) and A'First = 1 and A'Last = 2 and B = (1 => -1, others => 0) and B'First = 1 and B'Last = 2) [possible explanation: loop at copy_p.adb:10 should mention B in a loop invariant]"]]

Output:
Phase 1 of 2: generation of Global contracts ...
Phase 2 of 2: flow analysis and proof ...
copy_p.ads:11:15: medium: postcondition might fail, cannot prove B = A (e.g. when A = (1 => 0, 2 => 0, others => -1) and A'First = 1 and A'Last = 2 and B = (1 => -1, others => 0) and B'First = 1 and B'Last = 2) [possible explanation: loop at copy_p.adb:10 should mention B in a loop invariant]
Summary logged in /Users/lucian/Documents/Uni/Projects/Diplomarbeit/Marmaragan.nosync/tmp_3-last_invariant_per_loop/copy_p/gnatprove/gnatprove.out
--------------------------------------------------




benchmarks/3-last_invariant_per_loop/5-1.txt
Compilation successful: True

Mediums: 
[['lemmas.ads:44:64: ', ': postcondition might fail, cannot prove not Defends(S,a,F) (e.g. when S = (1000 => True, others => False) and a = 999)']]

Output:
Phase 1 of 2: generation of Global contracts ...
Phase 2 of 2: flow analysis and proof ...
lemmas.ads:44:64: medium: postcondition might fail, cannot prove not Defends(S,a,F) (e.g. when S = (1000 => True, others => False) and a = 999)
Summary logged in /Users/lucian/Documents/Uni/Projects/Diplomarbeit/Marmaragan.nosync/tmp_3-last_invariant_per_loop/lemmas/gnatprove/gnatprove.out
--------------------------------------------------




benchmarks/3-last_invariant_per_loop/2-1.txt
Compilation successful: True

Mediums: 
[['core_functions_and_theorems.adb:24:19: ', ': precondition might fail, cannot prove Subset(R,Arbitrary_ArgSets(F.Size)(I)) (e.g. when I = 0 and L = (Size => 0, List => (others => 0)) and SR = (Exists => ?, Arg => 1)) [possible explanation: loop invariant at line 18 should mention SR]'], ['core_functions_and_theorems.ads:13:14: ', ": postcondition might fail, cannot prove Grounded(Find_Grounded'Result,F) (e.g. when Find_Grounded'Result = (others => False))"]]

Output:
Phase 1 of 2: generation of Global contracts ...
Phase 2 of 2: flow analysis and proof ...
core_functions_and_theorems.adb:24:19: medium: precondition might fail, cannot prove Subset(R,Arbitrary_ArgSets(F.Size)(I)) (e.g. when I = 0 and L = (Size => 0, List => (others => 0)) and SR = (Exists => ?, Arg => 1)) [possible explanation: loop invariant at line 18 should mention SR]
core_functions_and_theorems.ads:13:14: medium: postcondition might fail, cannot prove Grounded(Find_Grounded'Result,F) (e.g. when Find_Grounded'Result = (others => False))
Summary logged in /Users/lucian/Documents/Uni/Projects/Diplomarbeit/Marmaragan.nosync/tmp_3-last_invariant_per_loop/core_functions_and_theorems/gnatprove/gnatprove.out
--------------------------------------------------




benchmarks/3-last_invariant_per_loop/4-1.txt
Compilation successful: True

Mediums: 
[['input_output.adb:56:22: ', ': predicate check might fail (e.g. when Counter = 1 and L = (others => 1))'], ['input_output.ads:12:14: ', ": postcondition might fail (e.g. when G = (others => (others => Arg'Last)) and G'First = 1 and G'Last = 1 and a = 999 and b = 1)"], ['input_output.ads:26:38: ', ": postcondition might fail, cannot prove not (ArgSet_From_InputArgList'Result(I) xor (for some J in L'Range => L(J) = I)) (e.g. when ArgSet_From_InputArgList'Result = (2 => True, others => False) and I = 1 and L = (1 => 1, others => 2) and L'First = 1 and L'Last = 2)"]]

Output:
Phase 1 of 2: generation of Global contracts ...
Phase 2 of 2: flow analysis and proof ...
input_output.adb:56:22: medium: predicate check might fail (e.g. when Counter = 1 and L = (others => 1))
input_output.ads:12:14: medium: postcondition might fail (e.g. when G = (others => (others => Arg'Last)) and G'First = 1 and G'Last = 1 and a = 999 and b = 1)
input_output.ads:26:38: medium: postcondition might fail, cannot prove not (ArgSet_From_InputArgList'Result(I) xor (for some J in L'Range => L(J) = I)) (e.g. when ArgSet_From_InputArgList'Result = (2 => True, others => False) and I = 1 and L = (1 => 1, others => 2) and L'First = 1 and L'Last = 2)
Summary logged in /Users/lucian/Documents/Uni/Projects/Diplomarbeit/Marmaragan.nosync/tmp_3-last_invariant_per_loop/input_output/gnatprove/gnatprove.out
--------------------------------------------------




benchmarks/3-last_invariant_per_loop/6-1.txt
Compilation successful: True

Mediums: 
[]

Output:
Phase 1 of 2: generation of Global contracts ...
Phase 2 of 2: flow analysis and proof ...
Summary logged in /Users/lucian/Documents/Uni/Projects/Diplomarbeit/Marmaragan.nosync/tmp_3-last_invariant_per_loop/adjacent_find_p/gnatprove/gnatprove.out
--------------------------------------------------
